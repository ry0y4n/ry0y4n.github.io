(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{331:function(s,a,t){s.exports=t.p+"assets/img/matplotlib_graph.356bf6db.png"},341:function(s,a,t){"use strict";t.r(a);var n=t(3),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"導入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#導入"}},[s._v("#")]),s._v(" 導入")]),s._v(" "),n("p",[s._v("卒業研究の過程で3D散布図を作ることになった．")]),s._v(" "),n("p",[s._v("具体的にはアイトラッキングの研究の際に，PC画面に画像を表示させ被験者に一定時間見せた時の視線のx座標，y座標，時間tの3次元データ(csv）を元に散布図を作るときに底面（x，y面）に，見せていた画像を表示させるとわかりやすいと思ったのがきっかけである．")]),s._v(" "),n("p",[s._v("しかし，いくら探せど日本語の記事が見つからなかったので（2Dグラフの背景画像挿入は簡単みたいでいくつか記事は見つかった），今回筆をとった次第である．")]),s._v(" "),n("blockquote",[n("blockquote",[n("p",[s._v("謝辞 : Twitterでアドバイスをくださった先輩方にこの場を借りて心から感謝したい．")])])]),s._v(" "),n("h2",{attrs:{id:"対象者・救える人"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#対象者・救える人"}},[s._v("#")]),s._v(" 対象者・救える人")]),s._v(" "),n("p",[s._v("3Dグラフ（散布図でなくても）を作る際に，底面(ひいてはx,y平面に水平)に任意の画像を表示したいという方．")]),s._v(" "),n("h2",{attrs:{id:"動作環境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#動作環境"}},[s._v("#")]),s._v(" 動作環境")]),s._v(" "),n("p",[s._v("anacondaで環境構築すれば全て標準でインストールされている．")]),s._v(" "),n("ul",[n("li",[s._v("python : 3.7")]),s._v(" "),n("li",[s._v("matplotlib : 3.1.0")]),s._v(" "),n("li",[s._v("pandas : 0.24.2")]),s._v(" "),n("li",[s._v("numpy : 1.16.4")]),s._v(" "),n("li",[s._v("同ディレクトリにPythonファイルとcsvファイル，画像ファイル(2018.png)を配置")])]),s._v(" "),n("h2",{attrs:{id:"コード"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#コード"}},[s._v("#")]),s._v(" コード")]),s._v(" "),n("div",{staticClass:"language-momosuke.py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 諸々のモジュールのインポート\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom matplotlib import cm\nfrom matplotlib.ticker import LinearLocator, FormatStrFormatter\nfrom matplotlib._png import read_png\nfrom matplotlib.cbook import get_sample_data\nfrom pylab import *\n\n# col_namesでカラム名を指定してcsvファイルを読み込む　*\ncol_names = ['x', 'y', 't']\ndata = pd.read_csv('kisisan.csv', names=col_names)\n\n# 分かりやすいようにそれぞれ配列へ格納（自分がpython初心者のため）　*\nlistX = data[\"x\"]\nlistY = data[\"y\"]\nlistT = data[\"t\"]\n# データ数がめちゃ多かったので100ごとにスキップして再格納　*\nlistX = listX[::100]\nlistY = listY[::100]\nlistT = listT[::100]\n\n# 3Dグラフを作る時のテンプレートみたいなもの（ax＝のところの書き方は複数あるっぽい)\nfig = plt.figure()\nax = Axes3D(fig)\n\n# 挿入画像を読み込む\nfn = get_sample_data(\"/Users/momosuke/eye-tracking-for-efficiency-improvement-of-transfer/2018.png\", asfileobj=False)\narr = read_png(fn)\n\n# 画像を挿入（1094000000のところは挿入するZ座標．0など任意の値にどうぞ）\nX1, Y1 = ogrid[0:arr.shape[0], 0:arr.shape[1]]\nax.plot_surface(X1, Y1, np.atleast_2d(1094000000), rstride=5, cstride=5, facecolors=arr)\n\n# メインの散布図を挿入　*\np = ax.scatter(listX, listY, listT, s=100, alpha=0.8, c=listT, cmap='hot', label='eye-position')\nfig.colorbar(p)\nax.plot(listX, listY, listT, linewidth=3, color='lightsalmon')\n\n# 各座標軸のラベルの設定\nax.set_xlabel('X')\nax.set_ylabel('Y')\nax.set_zlabel('t')\n\n# 描画\nplt.show()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br")])]),n("h2",{attrs:{id:"実行結果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#実行結果"}},[s._v("#")]),s._v(" 実行結果")]),s._v(" "),n("p",[n("img",{attrs:{src:t(331),alt:"matplotlib_graph.png"}})]),s._v(" "),n("h2",{attrs:{id:"注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[s._v("#")]),s._v(" 注意点")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("コード中で#での説明文の右に"),n("code",[s._v("*")]),s._v("が入ってるのは散布図に関するコードなので本題の画像挿入には関係ないので適宜無視して活用してほしい．")])]),s._v(" "),n("li",[n("p",[s._v("コード中の"),n("code",[s._v("get_sample_data()")]),s._v("で指定するパスは"),n("strong",[s._v("相対パスではなく絶対パス")]),s._v("にすることを推奨する．相対パスにすると"),n("code",[s._v("FileNotFoundError: [Errno 2] No such file or directory: '/Users/momosuke/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/sample_data/2018.png'")]),s._v("というエラーを吐かれる．要は相対パスを使いたいなら，"),n("code",[s._v("~/sample_data")]),s._v("に対象画像を置いてそれを参照してくれみたいなこと．")])]),s._v(" "),n("li",[n("p",[s._v("この記事は画像挿入する方法を与えるものでグラフの細かいパラメータ設定は省いてるので詳細部は各々で調整してほしい．")])])]),s._v(" "),n("h2",{attrs:{id:"参考文献"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[s._v("#")]),s._v(" 参考文献")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://stackoverflow.com/questions/13570287/image-overlay-in-3d-plot-using-python",target:"_blank",rel:"noopener noreferrer"}},[s._v("Image overlay in 3d plot using python"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://stackoverflow.com/questions/47744942/matplotlib-show-backgroundimage-in-3d-graph-with-plot-surface",target:"_blank",rel:"noopener noreferrer"}},[s._v("Matplotlib: Show Backgroundimage in 3D Graph with plot_Surface"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://docs.python.org/ja/3/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python 3.7.4 ドキュメント"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);